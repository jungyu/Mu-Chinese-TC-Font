SplineFontDB: 3.2
FontName: Mu-TaipeiSansTC
FullName: Mu-Taipei Sans TC
FamilyName: Mu-Taipei Sans TC
Weight: Regular
Copyright: Taipei Sans TC is a modified font of Source Han Sans.
Version: 1.000
ItalicAngle: 0
UnderlinePosition: -153
UnderlineWidth: 51
Ascent: 901
Descent: 123
InvalidEm: 0
sfntRevision: 0x00010000
LayerCount: 2
Layer: 0 1 "+gMxmbwAA" 1
Layer: 1 1 "+Uk1mbwAA" 0
XUID: [1021 423 1460472754 6663058]
StyleMap: 0x0040
FSType: 0
OS2Version: 4
OS2_WeightWidthSlopeOnly: 0
OS2_UseTypoMetrics: 1
CreationTime: 1561852816
ModificationTime: 1652115960
PfmFamily: 81
TTFWeight: 400
TTFWidth: 5
LineGap: 0
VLineGap: 0
Panose: 0 0 0 0 0 0 0 0 0 0
OS2TypoAscent: 901
OS2TypoAOffset: 0
OS2TypoDescent: -123
OS2TypoDOffset: 0
OS2TypoLinegap: 0
OS2WinAscent: 901
OS2WinAOffset: 0
OS2WinDescent: 280
OS2WinDOffset: 0
HheadAscent: 901
HheadAOffset: 0
HheadDescent: -123
HheadDOffset: 0
OS2SubXSize: 666
OS2SubYSize: 614
OS2SubXOff: 0
OS2SubYOff: 77
OS2SupXSize: 666
OS2SupYSize: 614
OS2SupXOff: 0
OS2SupYOff: 358
OS2StrikeYSize: 51
OS2StrikeYPos: 333
OS2CapHeight: 717
OS2XHeight: 512
OS2Vendor: '    '
OS2CodePages: 00100001.00000000
OS2UnicodeRanges: 20000003.2acf3c10.00000016.00000000
Lookup: 1 0 0 "'aalt' +W1hT1mJAZwlT5pgFkHhkxwAA +Z+VifgAA 0" { "'aalt' +W1hT1mJAZwlT5pgFkHhkxwAA +Z+VifgAA 0 +W1CIaGg8"  } ['aalt' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 3 0 0 "'aalt' +W1hT1mJAZwlT5pgFkHhkxwAA +Z+VifgAA 1" { "'aalt' +W1hT1mJAZwlT5pgFkHhkxwAA +Z+VifgAA 1 +W1CIaGg8"  } ['aalt' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'vrt2' +V4J29GXLj0kA & +U+aYBZB4ZMcA +Z+VifgAA 2" { "'vrt2' +V4J29GXLj0kA & +U+aYBZB4ZMcA +Z+VifgAA 2 +W1CIaGg8" ("vert") } ['vert' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) 'vrt2' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'vert' Vertical Alternates +Z+VifgAA 3" { "'vert' Vertical Alternates +Z+VifgAA 3 +W1CIaGg8"  } ['vert' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 4 0 0 "'ccmp' +W1dXFn1EVAgA-/+UgaJ4wAA +Z+VifgAA 4" { "'ccmp' +W1dXFn1EVAgA-/+UgaJ4wAA +Z+VifgAA 4 +W1CIaGg8"  } ['ccmp' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'hist' +a3dT8l9iXw8A +Z+VifgAA 5" { "'hist' +a3dT8l9iXw8A +Z+VifgAA 5 +W1CIaGg8"  } ['hist' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 4 0 1 "'liga' +ahlulpAjmtRbVwAA +Z+VifgAA 6" { "'liga' +ahlulpAjmtRbVwAA +Z+VifgAA 6 +W1CIaGg8"  } ['liga' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 4 0 0 "'dlig' +TvthD5AjmtRbVwAA +Z+VifgAA 7" { "'dlig' +TvthD5AjmtRbVwAA +Z+VifgAA 7 +W1CIaGg8"  } ['dlig' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'fwid' +UWhfYgAA +Z+VifgAA 8" { "'fwid' +UWhfYgAA +Z+VifgAA 8 +W1CIaGg8" ("full") } ['fwid' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'hwid' +U0pb7AAA +Z+VifgAA 9" { "'hwid' +U0pb7AAA +Z+VifgAA 9 +W1CIaGg8" ("hw") } ['hwid' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'pwid' +a9RPi1vsXqYA +Z+VifgAA 10" { "'pwid' +a9RPi1vsXqYA +Z+VifgAA 10 +W1CIaGg8"  } ['pwid' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'locl' +ZyxXMFMWX2JfDwAA +Z+VifgAA 11" { "'locl' +ZyxXMFMWX2JfDwAA +Z+VifgAA 11 +W1CIaGg8"  } ['locl' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 1 0 0 "'locl' +ZyxXMFMWX2JfDwAA +ZbwA +YslOAYqe +Ti1n5WJ+ 12" { "'locl' +ZyxXMFMWX2JfDwAA +ZbwA +YslOAYqe +Ti1n5WJ+ 12 +W1CIaGg8"  } ['locl' ('latn' <'dflt' > ) ]
Lookup: 257 0 0 "'halt' +U+aYBZB4ZMdTSlvs +Z+VifgAA 0" { "'halt' +U+aYBZB4ZMdTSlvs +Z+VifgAA 0 +ZbxUBFtXVxaMx2WZ 0"  "'halt' +U+aYBZB4ZMdTSlvs +Z+VifgAA 0 +ZbxUBFtXVxaMx2WZ 1"  "'halt' +U+aYBZB4ZMdTSlvs +Z+VifgAA 0 +ZbxUBFtXVxaMx2WZ 2"  } ['halt' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 257 0 0 "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1" { "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 0"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 1"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 2"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 3"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 4"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 5"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 6"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 7"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 8"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 9"  "'palt' +a9RPi1PmmAWQeGTHW1doRgAA +Z+VifgAA 1 +ZbxUBFtXVxaMx2WZ 10"  } ['palt' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 257 0 0 "'vhal' +U+aYBZB4ZMdXgnb0U0pbV2hG +Z+VifgAA 2" { "'vhal' +U+aYBZB4ZMdXgnb0U0pbV2hG +Z+VifgAA 2 +ZbxUBFtXVxaMx2WZ 0"  "'vhal' +U+aYBZB4ZMdXgnb0U0pbV2hG +Z+VifgAA 2 +ZbxUBFtXVxaMx2WZ 1"  "'vhal' +U+aYBZB4ZMdXgnb0U0pbV2hG +Z+VifgAA 2 +ZbxUBFtXVxaMx2WZ 2"  } ['vhal' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 258 0 0 "'vkrn' +V4J29FtXjd1froq/ +Z+VifgAA 3" { "'vkrn' +V4J29FtXjd1froq/ +Z+VifgAA 3 +W1CIaGg8"  } ['vkrn' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 257 0 0 "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4" { "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 0"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 1"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 2"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 3"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 4"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 5"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 6"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 7"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 8"  "'vpal' +a9RPi06kZv9Xgnb0W1doRgAA +Z+VifgAA 4 +ZbxUBFtXVxaMx2WZ 9"  } ['vpal' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
Lookup: 258 8 0 "'kern' +bDRec1tXjd1froq/ +Z+VifgAA 5" { "'kern' +bDRec1tXjd1froq/ +Z+VifgAA 5 +W1CIaGg8"  } ['kern' ('DFLT' <'dflt' > 'cyrl' <'dflt' > 'grek' <'dflt' > 'hani' <'ZHH ' 'ZHT ' 'dflt' > 'kana' <'dflt' > 'latn' <'ZHH ' 'ZHT ' 'dflt' > ) ]
MarkAttachClasses: 1
DEI: 91125
TtTable: prep
PUSHW_1
 41
CALL
SVTCA[x-axis]
PUSHW_3
 3
 25
 43
CALL
SVTCA[x-axis]
PUSHW_8
 27
 76
 66
 54
 39
 23
 0
 49
CALL
SVTCA[y-axis]
PUSHW_8
 25
 85
 66
 54
 39
 23
 0
 49
CALL
PUSHW_8
 26
 93
 76
 54
 39
 23
 0
 49
CALL
SVTCA[y-axis]
PUSHW_3
 28
 1
 48
CALL
PUSHW_1
 24
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHW_1
 31
CALL
SVTCA[x-axis]
PUSHW_3
 3
 19
 33
CALL
SVTCA[x-axis]
PUSHW_8
 21
 76
 66
 54
 39
 23
 0
 39
CALL
SVTCA[y-axis]
PUSHW_8
 19
 85
 66
 54
 39
 23
 0
 39
CALL
PUSHW_8
 20
 93
 76
 54
 39
 23
 0
 39
CALL
SVTCA[y-axis]
PUSHW_3
 22
 1
 38
CALL
PUSHW_1
 18
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHW_1
 21
CALL
SVTCA[x-axis]
PUSHW_3
 3
 13
 23
CALL
SVTCA[x-axis]
PUSHW_8
 15
 76
 66
 54
 39
 23
 0
 29
CALL
SVTCA[y-axis]
PUSHW_8
 13
 85
 66
 54
 39
 23
 0
 29
CALL
PUSHW_8
 14
 93
 76
 54
 39
 23
 0
 29
CALL
SVTCA[y-axis]
PUSHW_3
 16
 1
 28
CALL
PUSHW_1
 12
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHW_1
 11
CALL
SVTCA[x-axis]
PUSHW_3
 3
 7
 13
CALL
SVTCA[x-axis]
PUSHW_8
 9
 76
 66
 54
 39
 23
 0
 19
CALL
SVTCA[y-axis]
PUSHW_8
 7
 85
 66
 54
 39
 23
 0
 19
CALL
PUSHW_8
 8
 93
 76
 54
 39
 23
 0
 19
CALL
SVTCA[y-axis]
PUSHW_3
 10
 1
 18
CALL
PUSHW_1
 6
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHW_1
 1
CALL
SVTCA[y-axis]
PUSHW_3
 1
 2
 3
CALL
SVTCA[x-axis]
PUSHW_3
 3
 1
 3
CALL
SVTCA[x-axis]
PUSHW_8
 3
 76
 66
 54
 39
 23
 0
 9
CALL
SVTCA[y-axis]
PUSHW_8
 1
 85
 66
 54
 39
 23
 0
 9
CALL
PUSHW_8
 2
 93
 76
 54
 39
 23
 0
 9
CALL
SVTCA[y-axis]
PUSHW_3
 4
 1
 8
CALL
PUSHW_1
 0
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
EndTTInstrs
TtTable: fpgm
PUSHW_1
 1
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 2
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 3
FDEF
PUSHW_1
 2
LOOPCALL
POP
ENDF
PUSHW_1
 4
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 5
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 6
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 7
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 8
FDEF
PUSHW_1
 7
LOOPCALL
ENDF
PUSHW_1
 9
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 64
ELSE
PUSHB_1
 0
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 128
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 10
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 11
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 12
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 13
FDEF
PUSHW_1
 12
LOOPCALL
POP
ENDF
PUSHW_1
 14
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 15
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 16
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 17
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 18
FDEF
PUSHW_1
 17
LOOPCALL
ENDF
PUSHW_1
 19
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 64
ELSE
PUSHB_1
 0
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 128
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 20
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 21
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 22
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 23
FDEF
PUSHW_1
 22
LOOPCALL
POP
ENDF
PUSHW_1
 24
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 25
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 26
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 27
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 28
FDEF
PUSHW_1
 27
LOOPCALL
ENDF
PUSHW_1
 29
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 64
ELSE
PUSHB_1
 0
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 128
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 30
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 31
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 32
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 33
FDEF
PUSHW_1
 32
LOOPCALL
POP
ENDF
PUSHW_1
 34
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 35
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 36
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 37
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 38
FDEF
PUSHW_1
 37
LOOPCALL
ENDF
PUSHW_1
 39
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 64
ELSE
PUSHB_1
 0
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 128
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 40
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
PUSHW_1
 41
FDEF
MPPEM
PUSHW_1
 9
LT
IF
PUSHB_2
 1
 1
INSTCTRL
EIF
PUSHW_1
 511
SCANCTRL
PUSHW_1
 68
SCVTCI
PUSHW_2
 9
 3
SDS
SDB
ENDF
PUSHW_1
 42
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 43
FDEF
PUSHW_1
 42
LOOPCALL
POP
ENDF
PUSHW_1
 44
FDEF
DUP
GC[cur]
PUSHB_1
 3
CINDEX
GC[cur]
GT
IF
SWAP
EIF
DUP
ROLL
DUP
ROLL
MD[grid]
ABS
ROLL
DUP
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[Grey]
SUB
ABS
GT
IF
SWAP
NEG
ROLL
EIF
MDAP[rnd]
DUP
PUSHB_1
 0
GTEQ
IF
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
EIF
ELSE
ROUND[Black]
DUP
PUSHB_1
 0
EQ
IF
POP
PUSHB_1
 64
NEG
EIF
EIF
MSIRP[no-rp0]
ENDF
PUSHW_1
 45
FDEF
DUP
GC[cur]
PUSHB_1
 4
CINDEX
GC[cur]
GT
IF
SWAP
ROLL
EIF
DUP
GC[cur]
DUP
ROUND[White]
SUB
ABS
PUSHB_1
 4
CINDEX
GC[cur]
DUP
ROUND[White]
SUB
ABS
GT
IF
SWAP
ROLL
EIF
MDAP[rnd]
MIRP[rp0,min,rnd,black]
ENDF
PUSHW_1
 46
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
LT
IF
LTEQ
IF
PUSHB_1
 128
WCVTP
ELSE
PUSHB_1
 64
WCVTP
EIF
ELSE
POP
POP
DUP
RCVT
PUSHB_1
 192
LT
IF
PUSHB_1
 192
WCVTP
ELSE
POP
EIF
EIF
ENDF
PUSHW_1
 47
FDEF
DUP
DUP
RCVT
ROUND[Black]
WCVTP
PUSHB_1
 1
ADD
DUP
DUP
RCVT
RDTG
ROUND[Black]
RTG
WCVTP
PUSHB_1
 1
ADD
ENDF
PUSHW_1
 48
FDEF
PUSHW_1
 47
LOOPCALL
ENDF
PUSHW_1
 49
FDEF
MPPEM
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 64
ELSE
PUSHB_1
 0
EIF
ROLL
ROLL
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHB_1
 128
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 192
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 256
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHB_1
 3
MINDEX
GTEQ
IF
SWAP
POP
PUSHW_1
 320
ROLL
ROLL
ELSE
ROLL
SWAP
EIF
DUP
PUSHW_1
 3
MINDEX
GTEQ
IF
PUSHB_1
 3
CINDEX
RCVT
PUSHW_1
 384
LT
IF
SWAP
POP
PUSHW_1
 384
SWAP
POP
ELSE
PUSHB_1
 3
CINDEX
RCVT
SWAP
POP
SWAP
POP
EIF
ELSE
POP
EIF
WCVTP
ENDF
PUSHW_1
 50
FDEF
MPPEM
GTEQ
IF
RCVT
WCVTP
ELSE
POP
POP
EIF
ENDF
EndTTInstrs
ShortTable: cvt  30
  21
  67
  61
  75
  0
  0
  21
  67
  61
  75
  0
  0
  21
  67
  61
  75
  0
  0
  21
  67
  61
  75
  0
  0
  21
  67
  61
  75
  0
  0
EndShort
ShortTable: maxp 16
  1
  0
  -32730
  334
  41
  0
  0
  2
  0
  1
  51
  0
  512
  2784
  0
  0
EndShort
LangName: 1028 "" "" "+a80A--+U/BTF57RmtQA"
LangName: 1033 "" "" "" "" "" "Version 1.000" "" "" "JT Foundry" "JT Foundry" "" "bit.ly/jtfoundry" "bit.ly/jtfoundry" "This Font Software is licensed under the SIL Open Font License, Version 1.1. This Font Software is distributed on an +ACIA-AS IS+ACIA BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the SIL Open Font License for the specific language, permissions and limitations governing your use of this Font Software." "http://scripts.sil.org/OFL"
GaspTable: 1 65535 15 1
Encoding: UnicodeFull
UnicodeInterp: none
NameList: AGL For New Fonts
DisplaySize: -48
AntiAlias: 1
FitToEm: 0
WinInfo: 27550 25 7
BeginPrivate: 0
EndPrivate
BeginChars: 1114601 1

StartChar: uni6BCD
Encoding: 27597 27597 0
AltUni2: 002e9f.ffffffff.0
Width: 1024
GlyphClass: 2
Flags: WO
LayerCount: 2
Fore
SplineSet
241.620117188 545 m 5,0,-1
 297.129882812 569 l 5,1,2
 359.919921875 477 359.919921875 477 383.580078125 396 c 4,3,4
 385.400390625 391 385.400390625 391 386.309570312 387 c 5,5,-1
 326.25 357 l 5,6,7
 308.049804688 435 308.049804688 435 247.990234375 535 c 4,8,9
 244.349609375 540 244.349609375 540 241.620117188 545 c 5,0,-1
676.599609375 357 m 5,10,-1
 625.639648438 382 l 5,11,12
 679.330078125 463 679.330078125 463 724.830078125 571 c 5,13,-1
 790.349609375 543 l 5,14,15
 729.379882812 428 729.379882812 428 676.599609375 357 c 5,10,-1
549 329 m 5,16,-1
 843 329 l 5,17,-1
 843 600 l 5,18,-1
 549 600 l 5,19,-1
 549 329 l 5,16,-1
177 329 m 5,20,-1
 470 329 l 5,21,-1
 470 600 l 5,22,-1
 177 600 l 5,23,-1
 177 329 l 5,20,-1
549 675 m 5,24,-1
 921 675 l 5,25,-1
 921 196 l 5,26,-1
 843 196 l 5,27,-1
 843 254 l 5,28,-1
 549 254 l 5,29,-1
 549 -78 l 5,30,-1
 470 -78 l 5,31,-1
 470 254 l 5,32,-1
 177 254 l 5,33,-1
 177 190 l 5,34,-1
 102 190 l 5,35,-1
 102 675 l 5,36,-1
 470 675 l 5,37,-1
 470 857 l 5,38,-1
 549 857 l 5,39,-1
 549 675 l 5,24,-1
EndSplineSet
EndChar
EndChars
EndSplineFont
